{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "f2981c30-103b-43a8-a358-1505c670fdd2",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.cluster import KMeans"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "30d5c517-eea4-4e81-8b63-4932de7d87d5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Annual Income (k$)</th>\n",
       "      <th>Spending Score (1-100)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Male</td>\n",
       "      <td>19</td>\n",
       "      <td>15</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>15</td>\n",
       "      <td>81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Female</td>\n",
       "      <td>20</td>\n",
       "      <td>16</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Female</td>\n",
       "      <td>23</td>\n",
       "      <td>16</td>\n",
       "      <td>77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Female</td>\n",
       "      <td>31</td>\n",
       "      <td>17</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>Female</td>\n",
       "      <td>22</td>\n",
       "      <td>17</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>Female</td>\n",
       "      <td>35</td>\n",
       "      <td>18</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>Female</td>\n",
       "      <td>23</td>\n",
       "      <td>18</td>\n",
       "      <td>94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>Male</td>\n",
       "      <td>64</td>\n",
       "      <td>19</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>Female</td>\n",
       "      <td>30</td>\n",
       "      <td>19</td>\n",
       "      <td>72</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   CustomerID  Gender  Age  Annual Income (k$)  Spending Score (1-100)\n",
       "0           1    Male   19                  15                      39\n",
       "1           2    Male   21                  15                      81\n",
       "2           3  Female   20                  16                       6\n",
       "3           4  Female   23                  16                      77\n",
       "4           5  Female   31                  17                      40\n",
       "5           6  Female   22                  17                      76\n",
       "6           7  Female   35                  18                       6\n",
       "7           8  Female   23                  18                      94\n",
       "8           9    Male   64                  19                       3\n",
       "9          10  Female   30                  19                      72"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=pd.read_csv('Mall_Customers.csv')\n",
    "df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "02d58431-6e3e-4499-a8c1-b8a3cf005f6c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(200, 5)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape #give no. of rows and columns\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "1e1785b8-a945-45ab-8d81-9ee74eb9462f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 200 entries, 0 to 199\n",
      "Data columns (total 5 columns):\n",
      " #   Column                  Non-Null Count  Dtype \n",
      "---  ------                  --------------  ----- \n",
      " 0   CustomerID              200 non-null    int64 \n",
      " 1   Gender                  200 non-null    object\n",
      " 2   Age                     200 non-null    int64 \n",
      " 3   Annual Income (k$)      200 non-null    int64 \n",
      " 4   Spending Score (1-100)  200 non-null    int64 \n",
      "dtypes: int64(4), object(1)\n",
      "memory usage: 7.9+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info() #info about the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "fa11a66f-6691-427f-a50c-32cb2e210da5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 15,  39],\n",
       "       [ 15,  81],\n",
       "       [ 16,   6],\n",
       "       [ 16,  77],\n",
       "       [ 17,  40],\n",
       "       [ 17,  76],\n",
       "       [ 18,   6],\n",
       "       [ 18,  94],\n",
       "       [ 19,   3],\n",
       "       [ 19,  72],\n",
       "       [ 19,  14],\n",
       "       [ 19,  99],\n",
       "       [ 20,  15],\n",
       "       [ 20,  77],\n",
       "       [ 20,  13],\n",
       "       [ 20,  79],\n",
       "       [ 21,  35],\n",
       "       [ 21,  66],\n",
       "       [ 23,  29],\n",
       "       [ 23,  98],\n",
       "       [ 24,  35],\n",
       "       [ 24,  73],\n",
       "       [ 25,   5],\n",
       "       [ 25,  73],\n",
       "       [ 28,  14],\n",
       "       [ 28,  82],\n",
       "       [ 28,  32],\n",
       "       [ 28,  61],\n",
       "       [ 29,  31],\n",
       "       [ 29,  87],\n",
       "       [ 30,   4],\n",
       "       [ 30,  73],\n",
       "       [ 33,   4],\n",
       "       [ 33,  92],\n",
       "       [ 33,  14],\n",
       "       [ 33,  81],\n",
       "       [ 34,  17],\n",
       "       [ 34,  73],\n",
       "       [ 37,  26],\n",
       "       [ 37,  75],\n",
       "       [ 38,  35],\n",
       "       [ 38,  92],\n",
       "       [ 39,  36],\n",
       "       [ 39,  61],\n",
       "       [ 39,  28],\n",
       "       [ 39,  65],\n",
       "       [ 40,  55],\n",
       "       [ 40,  47],\n",
       "       [ 40,  42],\n",
       "       [ 40,  42],\n",
       "       [ 42,  52],\n",
       "       [ 42,  60],\n",
       "       [ 43,  54],\n",
       "       [ 43,  60],\n",
       "       [ 43,  45],\n",
       "       [ 43,  41],\n",
       "       [ 44,  50],\n",
       "       [ 44,  46],\n",
       "       [ 46,  51],\n",
       "       [ 46,  46],\n",
       "       [ 46,  56],\n",
       "       [ 46,  55],\n",
       "       [ 47,  52],\n",
       "       [ 47,  59],\n",
       "       [ 48,  51],\n",
       "       [ 48,  59],\n",
       "       [ 48,  50],\n",
       "       [ 48,  48],\n",
       "       [ 48,  59],\n",
       "       [ 48,  47],\n",
       "       [ 49,  55],\n",
       "       [ 49,  42],\n",
       "       [ 50,  49],\n",
       "       [ 50,  56],\n",
       "       [ 54,  47],\n",
       "       [ 54,  54],\n",
       "       [ 54,  53],\n",
       "       [ 54,  48],\n",
       "       [ 54,  52],\n",
       "       [ 54,  42],\n",
       "       [ 54,  51],\n",
       "       [ 54,  55],\n",
       "       [ 54,  41],\n",
       "       [ 54,  44],\n",
       "       [ 54,  57],\n",
       "       [ 54,  46],\n",
       "       [ 57,  58],\n",
       "       [ 57,  55],\n",
       "       [ 58,  60],\n",
       "       [ 58,  46],\n",
       "       [ 59,  55],\n",
       "       [ 59,  41],\n",
       "       [ 60,  49],\n",
       "       [ 60,  40],\n",
       "       [ 60,  42],\n",
       "       [ 60,  52],\n",
       "       [ 60,  47],\n",
       "       [ 60,  50],\n",
       "       [ 61,  42],\n",
       "       [ 61,  49],\n",
       "       [ 62,  41],\n",
       "       [ 62,  48],\n",
       "       [ 62,  59],\n",
       "       [ 62,  55],\n",
       "       [ 62,  56],\n",
       "       [ 62,  42],\n",
       "       [ 63,  50],\n",
       "       [ 63,  46],\n",
       "       [ 63,  43],\n",
       "       [ 63,  48],\n",
       "       [ 63,  52],\n",
       "       [ 63,  54],\n",
       "       [ 64,  42],\n",
       "       [ 64,  46],\n",
       "       [ 65,  48],\n",
       "       [ 65,  50],\n",
       "       [ 65,  43],\n",
       "       [ 65,  59],\n",
       "       [ 67,  43],\n",
       "       [ 67,  57],\n",
       "       [ 67,  56],\n",
       "       [ 67,  40],\n",
       "       [ 69,  58],\n",
       "       [ 69,  91],\n",
       "       [ 70,  29],\n",
       "       [ 70,  77],\n",
       "       [ 71,  35],\n",
       "       [ 71,  95],\n",
       "       [ 71,  11],\n",
       "       [ 71,  75],\n",
       "       [ 71,   9],\n",
       "       [ 71,  75],\n",
       "       [ 72,  34],\n",
       "       [ 72,  71],\n",
       "       [ 73,   5],\n",
       "       [ 73,  88],\n",
       "       [ 73,   7],\n",
       "       [ 73,  73],\n",
       "       [ 74,  10],\n",
       "       [ 74,  72],\n",
       "       [ 75,   5],\n",
       "       [ 75,  93],\n",
       "       [ 76,  40],\n",
       "       [ 76,  87],\n",
       "       [ 77,  12],\n",
       "       [ 77,  97],\n",
       "       [ 77,  36],\n",
       "       [ 77,  74],\n",
       "       [ 78,  22],\n",
       "       [ 78,  90],\n",
       "       [ 78,  17],\n",
       "       [ 78,  88],\n",
       "       [ 78,  20],\n",
       "       [ 78,  76],\n",
       "       [ 78,  16],\n",
       "       [ 78,  89],\n",
       "       [ 78,   1],\n",
       "       [ 78,  78],\n",
       "       [ 78,   1],\n",
       "       [ 78,  73],\n",
       "       [ 79,  35],\n",
       "       [ 79,  83],\n",
       "       [ 81,   5],\n",
       "       [ 81,  93],\n",
       "       [ 85,  26],\n",
       "       [ 85,  75],\n",
       "       [ 86,  20],\n",
       "       [ 86,  95],\n",
       "       [ 87,  27],\n",
       "       [ 87,  63],\n",
       "       [ 87,  13],\n",
       "       [ 87,  75],\n",
       "       [ 87,  10],\n",
       "       [ 87,  92],\n",
       "       [ 88,  13],\n",
       "       [ 88,  86],\n",
       "       [ 88,  15],\n",
       "       [ 88,  69],\n",
       "       [ 93,  14],\n",
       "       [ 93,  90],\n",
       "       [ 97,  32],\n",
       "       [ 97,  86],\n",
       "       [ 98,  15],\n",
       "       [ 98,  88],\n",
       "       [ 99,  39],\n",
       "       [ 99,  97],\n",
       "       [101,  24],\n",
       "       [101,  68],\n",
       "       [103,  17],\n",
       "       [103,  85],\n",
       "       [103,  23],\n",
       "       [103,  69],\n",
       "       [113,   8],\n",
       "       [113,  91],\n",
       "       [120,  16],\n",
       "       [120,  79],\n",
       "       [126,  28],\n",
       "       [126,  74],\n",
       "       [137,  18],\n",
       "       [137,  83]], dtype=int64)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X=df.iloc[:,[3,4]].values\n",
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "f68d23d2-dc04-439c-a769-9da8bb02475a",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\nehaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "C:\\Users\\nehaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1382: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.\n",
      "  warnings.warn(\n",
      "C:\\Users\\nehaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "C:\\Users\\nehaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1382: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.\n",
      "  warnings.warn(\n",
      "C:\\Users\\nehaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "C:\\Users\\nehaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1382: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.\n",
      "  warnings.warn(\n",
      "C:\\Users\\nehaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "C:\\Users\\nehaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1382: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.\n",
      "  warnings.warn(\n",
      "C:\\Users\\nehaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "C:\\Users\\nehaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1382: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.\n",
      "  warnings.warn(\n",
      "C:\\Users\\nehaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "C:\\Users\\nehaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1382: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.\n",
      "  warnings.warn(\n",
      "C:\\Users\\nehaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "C:\\Users\\nehaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1382: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.\n",
      "  warnings.warn(\n",
      "C:\\Users\\nehaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "C:\\Users\\nehaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1382: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.\n",
      "  warnings.warn(\n",
      "C:\\Users\\nehaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "C:\\Users\\nehaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1382: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.\n",
      "  warnings.warn(\n",
      "C:\\Users\\nehaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "C:\\Users\\nehaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1382: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "#finding wcss(within clusters sum of square) values for different numbers of cluster\n",
    "wcss=[]\n",
    "for i in range(1,11):\n",
    "    kmeans=KMeans(n_clusters=i, init='k-means++', random_state=42)\n",
    "    kmeans.fit(X)\n",
    "    wcss.append(kmeans.inertia_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "b9574f66-e410-4ded-a323-78629f52377c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAlgAAAHJCAYAAABZtEenAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguMCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy81sbWrAAAACXBIWXMAAA9hAAAPYQGoP6dpAABgtElEQVR4nO3dd3xUVf7/8ddMJr2QQgq9QwAhoQRCRxDdL6D+kK9rA0QBsYBrRQUXcBVdvyIIAroUBayoYVlR0QUUEKQjRYpICwRIgBDS68z8/ggZjbQkTHInyfv5eMyD5JYzn8zR8Obcc8812e12OyIiIiLiNGajCxARERGpahSwRERERJxMAUtERETEyRSwRERERJxMAUtERETEyRSwRERERJxMAUtERETEyRSwRERERJxMAUtEpJrR+tIi5U8BS0Suy/PPP0+LFi2u+urTp4/j2KKvnW3z5s3XrOOHH34AYOnSpbRo0YKEhIRyr6u0impr0aIFR48evewx69atcxxTGmlpaTz33HNs27bNsW3o0KEMHTr0umq+mvJuX8RVWYwuQEQqt0cffZS7777b8f2cOXPYt28fs2bNcmzz8PCosHomTpxI69atL7uvcePGFVbH9TKbzaxYsYJHH330kn3ffPNNmdrcv38/y5Yt44477rje8kTkGhSwROS61K9fn/r16zu+Dw4OxsPDg+joaEPqadq0qWHv7Uzt27e/bMDKy8tj1apVtGzZkv379xtUnYhciy4RikiFW7p0Kbfccgtt2rThtttuY926dcX2nzp1iqeeeopOnToRFRXF/fffz759+8q9riVLltC7d2/atm172fc8duwYjz/+ON26dSM6OpqhQ4eyfft2AC5cuECrVq1YuHCh4/gzZ87QokULnnrqKcc2u91O9+7dmTlz5lVr6d+/PwcPHuTw4cPFtq9btw6TyUTPnj0vOWfbtm0MGTKEqKgoOnXqxHPPPcf58+eBwkuow4YNA2DYsGHFLtvZ7XbmzZvn+Nnvuusu9uzZU6ztPXv2MGLECDp37kz79u15+OGH+e2334odc+rUKcaMGUOHDh3o1q0b77///lV/RpGqTAFLRCrU6dOnmTt3Ln/729+YOXMmdrudsWPHkpycDMD58+e5++672bt3L3//+9958803sdls3HfffZeEjcux2WwUFBRc8rJarVc9LzExkbfffpsn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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#plotting an elboe graph\n",
    "sns.set()\n",
    "plt.plot(range(1,11),wcss)\n",
    "plt.title(\"The Elbow Method\")\n",
    "plt.xlabel('No. of Clusters')\n",
    "plt.ylabel('WCSS Values')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "1a172e9e-546c-42a8-a012-5507fcf38991",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\nehaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "C:\\Users\\nehaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1382: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4\n",
      " 3 4 3 4 3 4 1 4 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n",
      " 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n",
      " 1 1 1 1 1 1 1 1 1 1 1 1 2 0 2 1 2 0 2 0 2 1 2 0 2 0 2 0 2 0 2 1 2 0 2 0 2\n",
      " 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n",
      " 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2]\n"
     ]
    }
   ],
   "source": [
    "#training the kmean clustering model\n",
    "kmeans= KMeans(n_clusters=5, init='k-means++', random_state=0)\n",
    "\n",
    "Y=kmeans.fit_predict(X)\n",
    "print(Y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "d2fe32c4-660a-4b49-9429-ab193a685d21",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#plotting all the cluster and their centroid\n",
    "plt.figure(figsize=(8,8))\n",
    "plt.scatter(X[Y==0,0], X[Y==0,1], s=50, c='green', label='Cluster 1')\n",
    "plt.scatter(X[Y==1,0], X[Y==1,1], s=50, c='red', label='Cluster 2')\n",
    "plt.scatter(X[Y==2,0], X[Y==2,1], s=50, c='yellow', label='Cluster 3')\n",
    "plt.scatter(X[Y==3,0], X[Y==3,1], s=50, c='violet', label='Cluster 4')\n",
    "plt.scatter(X[Y==4,0], X[Y==4,1], s=50, c='blue', label='Cluster 5')\n",
    "\n",
    "#plotting of centroid\n",
    "plt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1], s=100, c='cyan', label='Centroids')\n",
    "\n",
    "plt.title('Customers Groups')\n",
    "plt.xlabel('Annual Income')\n",
    "plt.ylabel('Spneeding Score')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cec86315-66d4-462d-a4aa-b9fc4fd1ddd8",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
